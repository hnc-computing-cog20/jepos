/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.jepos;

import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author john
 */

enum TABS{ TAB_SALES, TAB_PRODUCTS, TAB_REPORTS, TAB_USERS }

public class ui extends javax.swing.JFrame {

    Order order;
    int quantity = 0;
    //int totalCustServed = 0;
    Staff user = login.user;
    //Staff user = Staff.getByUsername(login.username);
    /**
     * Creates new form ui
     */
    public ui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpTabs = new javax.swing.JTabbedPane();
        pnlShopping = new javax.swing.JPanel();
        pnlKeypad = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        pnlFrequentlyBought = new javax.swing.JPanel();
        btnFreq1 = new javax.swing.JButton();
        btnFreq2 = new javax.swing.JButton();
        btnFreq3 = new javax.swing.JButton();
        btnFreq4 = new javax.swing.JButton();
        btnFreq5 = new javax.swing.JButton();
        btnFreq6 = new javax.swing.JButton();
        btnFreq7 = new javax.swing.JButton();
        btnFreq8 = new javax.swing.JButton();
        btnFreq9 = new javax.swing.JButton();
        lblFrequentlyBought = new javax.swing.JLabel();
        pnlSelectProduct = new javax.swing.JPanel();
        cbbSelectProduct = new javax.swing.JComboBox<>();
        pnlSalesTotal = new javax.swing.JPanel();
        lblSalesTotal = new javax.swing.JLabel();
        scpSalesTotal = new javax.swing.JScrollPane();
        txtOrderDisplay = new javax.swing.JTextArea();
        pnlControl = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnCheckout = new javax.swing.JButton();
        pnlProducts = new javax.swing.JPanel();
        pnlBeta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlReports = new javax.swing.JPanel();
        pnlReportFor = new javax.swing.JPanel();
        cbbSelectUserForReport = new javax.swing.JComboBox<>();
        lblReportFor = new javax.swing.JLabel();
        pnlReportInfo = new javax.swing.JPanel();
        lblTotalCustServed = new javax.swing.JLabel();
        lblTotalSalesTakings = new javax.swing.JLabel();
        lblAvgSaleCost = new javax.swing.JLabel();
        lblMinSaleCost = new javax.swing.JLabel();
        lblMaxSaleCost = new javax.swing.JLabel();
        pnlUsers = new javax.swing.JPanel();
        pnlInfo = new javax.swing.JPanel();
        lblLoggedInAs = new javax.swing.JLabel();
        lblAcctRole = new javax.swing.JLabel();
        lblStaffId = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        pnlUserManagement = new javax.swing.JPanel();
        btnCreateAcct = new javax.swing.JButton();
        cbbSelectAcct = new javax.swing.JComboBox<>();
        btnEditAcct = new javax.swing.JButton();
        btnDelAcct = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        mnuSystem = new javax.swing.JMenu();
        mnuReboot = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JEPoS - Â© Carignani Corporation");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tbpTabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbpTabsStateChanged(evt);
            }
        });

        btn1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        btnC.setText("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlKeypadLayout = new javax.swing.GroupLayout(pnlKeypad);
        pnlKeypad.setLayout(pnlKeypadLayout);
        pnlKeypadLayout.setHorizontalGroup(
            pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKeypadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKeypadLayout.createSequentialGroup()
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlKeypadLayout.createSequentialGroup()
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlKeypadLayout.createSequentialGroup()
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlKeypadLayout.createSequentialGroup()
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlKeypadLayout.createSequentialGroup()
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlKeypadLayout.setVerticalGroup(
            pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKeypadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlKeypadLayout.createSequentialGroup()
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlKeypadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlKeypadLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlKeypadLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        btnFreq1.setText("Apple");
        btnFreq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFreq1ActionPerformed(evt);
            }
        });

        btnFreq2.setText("Banana");

        btnFreq3.setText("Egg");

        btnFreq4.setText("Bread");

        btnFreq5.setText("Onion");

        btnFreq6.setText("Dog");

        btnFreq7.setText("Milk");

        btnFreq8.setText("Meme");

        btnFreq9.setText("BigThing");

        lblFrequentlyBought.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblFrequentlyBought.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFrequentlyBought.setText("Frequently Bought Items");

        cbbSelectProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apple", "Item 1" }));

        javax.swing.GroupLayout pnlSelectProductLayout = new javax.swing.GroupLayout(pnlSelectProduct);
        pnlSelectProduct.setLayout(pnlSelectProductLayout);
        pnlSelectProductLayout.setHorizontalGroup(
            pnlSelectProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelectProductLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbSelectProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSelectProductLayout.setVerticalGroup(
            pnlSelectProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelectProductLayout.createSequentialGroup()
                .addComponent(cbbSelectProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlFrequentlyBoughtLayout = new javax.swing.GroupLayout(pnlFrequentlyBought);
        pnlFrequentlyBought.setLayout(pnlFrequentlyBoughtLayout);
        pnlFrequentlyBoughtLayout.setHorizontalGroup(
            pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFrequentlyBoughtLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFrequentlyBought, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlFrequentlyBoughtLayout.createSequentialGroup()
                        .addGroup(pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFrequentlyBoughtLayout.createSequentialGroup()
                                .addComponent(btnFreq1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFrequentlyBoughtLayout.createSequentialGroup()
                                .addComponent(btnFreq4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFrequentlyBoughtLayout.createSequentialGroup()
                                .addComponent(btnFreq7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFreq9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlSelectProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlFrequentlyBoughtLayout.setVerticalGroup(
            pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFrequentlyBoughtLayout.createSequentialGroup()
                .addComponent(pnlSelectProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFrequentlyBought, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFreq1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFreq4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFrequentlyBoughtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFreq7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFreq9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lblSalesTotal.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        lblSalesTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSalesTotal.setText("Sales Total");
        lblSalesTotal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtOrderDisplay.setEditable(false);
        txtOrderDisplay.setColumns(20);
        txtOrderDisplay.setRows(5);
        scpSalesTotal.setViewportView(txtOrderDisplay);

        javax.swing.GroupLayout pnlSalesTotalLayout = new javax.swing.GroupLayout(pnlSalesTotal);
        pnlSalesTotal.setLayout(pnlSalesTotalLayout);
        pnlSalesTotalLayout.setHorizontalGroup(
            pnlSalesTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSalesTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSalesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scpSalesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSalesTotalLayout.setVerticalGroup(
            pnlSalesTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSalesTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scpSalesTotal)
                .addContainerGap())
        );

        btnCancel.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        btnCancel.setText("CANCEL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnCheckout.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        btnCheckout.setText("CHECKOUT");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlLayout = new javax.swing.GroupLayout(pnlControl);
        pnlControl.setLayout(pnlControlLayout);
        pnlControlLayout.setHorizontalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCheckout)
                .addGap(8, 8, 8))
        );
        pnlControlLayout.setVerticalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCheckout, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlShoppingLayout = new javax.swing.GroupLayout(pnlShopping);
        pnlShopping.setLayout(pnlShoppingLayout);
        pnlShoppingLayout.setHorizontalGroup(
            pnlShoppingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlShoppingLayout.createSequentialGroup()
                .addGroup(pnlShoppingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlShoppingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlShoppingLayout.createSequentialGroup()
                        .addComponent(pnlKeypad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlFrequentlyBought, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlSalesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlShoppingLayout.setVerticalGroup(
            pnlShoppingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlShoppingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlShoppingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSalesTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlKeypad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFrequentlyBought, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbpTabs.addTab("Shopping", pnlShopping);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BETA (W.I.P)");

        javax.swing.GroupLayout pnlBetaLayout = new javax.swing.GroupLayout(pnlBeta);
        pnlBeta.setLayout(pnlBetaLayout);
        pnlBetaLayout.setHorizontalGroup(
            pnlBetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBetaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlBetaLayout.setVerticalGroup(
            pnlBetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBetaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlProductsLayout = new javax.swing.GroupLayout(pnlProducts);
        pnlProducts.setLayout(pnlProductsLayout);
        pnlProductsLayout.setHorizontalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlProductsLayout.setVerticalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpTabs.addTab("Products", pnlProducts);

        pnlReports.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnlReportsFocusGained(evt);
            }
        });

        cbbSelectUserForReport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbSelectUserForReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSelectUserForReportActionPerformed(evt);
            }
        });

        lblReportFor.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblReportFor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReportFor.setText("Viewing report for: (user)");

        javax.swing.GroupLayout pnlReportForLayout = new javax.swing.GroupLayout(pnlReportFor);
        pnlReportFor.setLayout(pnlReportForLayout);
        pnlReportForLayout.setHorizontalGroup(
            pnlReportForLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportForLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportForLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReportForLayout.createSequentialGroup()
                        .addComponent(lblReportFor, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(cbbSelectUserForReport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlReportForLayout.setVerticalGroup(
            pnlReportForLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReportForLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbSelectUserForReport, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(lblReportFor)
                .addContainerGap())
        );

        lblTotalCustServed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalCustServed.setText("Total customers served:");

        lblTotalSalesTakings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalSalesTakings.setText("Total sales takings:");

        lblAvgSaleCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvgSaleCost.setText("Average sale cost: ");

        lblMinSaleCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinSaleCost.setText("Minimum sale cost:");

        lblMaxSaleCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMaxSaleCost.setText("Maximum sale cost:");

        javax.swing.GroupLayout pnlReportInfoLayout = new javax.swing.GroupLayout(pnlReportInfo);
        pnlReportInfo.setLayout(pnlReportInfoLayout);
        pnlReportInfoLayout.setHorizontalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalCustServed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTotalSalesTakings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAvgSaleCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMinSaleCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaxSaleCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlReportInfoLayout.setVerticalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotalCustServed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalSalesTakings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAvgSaleCost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMinSaleCost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMaxSaleCost)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlReportsLayout = new javax.swing.GroupLayout(pnlReports);
        pnlReports.setLayout(pnlReportsLayout);
        pnlReportsLayout.setHorizontalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addGroup(pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlReportFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReportInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(262, Short.MAX_VALUE))
        );
        pnlReportsLayout.setVerticalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlReportFor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );

        tbpTabs.addTab("Reports", pnlReports);

        lblLoggedInAs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoggedInAs.setText("Currently logged in as:");

        lblAcctRole.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAcctRole.setText("Account role:");

        lblStaffId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStaffId.setText("Staff ID:");

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAcctRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStaffId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLoggedInAs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoggedInAs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAcctRole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStaffId)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLogOut.setText("LOG OUT");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnCreateAcct.setText("Create Account");
        btnCreateAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAcctActionPerformed(evt);
            }
        });

        cbbSelectAcct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnEditAcct.setText("Edit Account");
        btnEditAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditAcctActionPerformed(evt);
            }
        });

        btnDelAcct.setText("Delete Account");
        btnDelAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelAcctActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUserManagementLayout = new javax.swing.GroupLayout(pnlUserManagement);
        pnlUserManagement.setLayout(pnlUserManagementLayout);
        pnlUserManagementLayout.setHorizontalGroup(
            pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserManagementLayout.createSequentialGroup()
                .addGroup(pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateAcct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbSelectAcct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlUserManagementLayout.createSequentialGroup()
                        .addComponent(btnEditAcct, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlUserManagementLayout.setVerticalGroup(
            pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserManagementLayout.createSequentialGroup()
                .addComponent(btnCreateAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbSelectAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlUsersLayout = new javax.swing.GroupLayout(pnlUsers);
        pnlUsers.setLayout(pnlUsersLayout);
        pnlUsersLayout.setHorizontalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUsersLayout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlUserManagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlUsersLayout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        pnlUsersLayout.setVerticalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsersLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlUserManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbpTabs.addTab("Users", pnlUsers);

        mnuSystem.setText("System");
        mnuSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSystemActionPerformed(evt);
            }
        });

        mnuReboot.setText("Reboot");
        mnuReboot.setEnabled(false);
        mnuReboot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRebootActionPerformed(evt);
            }
        });
        mnuSystem.add(mnuReboot);

        menuBar.add(mnuSystem);

        mnuHelp.setText("Help");

        mnuAbout.setText("About");
        mnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAboutActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuAbout);

        menuBar.add(mnuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbpTabs))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbpTabs)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // CUSTOM METHODS
    private void startNewOrder()
    {
        order = new Order(user, new Date());
        try { order.setNewOrderId(); }
        catch (SQLException ex) { Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex); }
    }
    
    private void numButtonPressed(int num)
    {
        // Get Product object by the string in cbbSelectProduct
        Product item = null;
        try {
            item = Inventory.getByName(cbbSelectProduct.getSelectedItem().toString().toUpperCase());
            //Order o = Order.getOrderById(0); // DEBUG
            /*ArrayList<Order> orders = Order.getAllOrders(); // DEBUG!
            for(Order i : orders)
            { // DEBUG!
                i.populateList();
                System.out.println("ID: "+i.getId()+"\tHANDLER: "+i.getHandler().getUsername()+"\tITEMS: "+i.getProducts()+"\n"+i.getText());
            }*/
        } catch (SQLException ex) {
            Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Add the number pressed to the total quantity (9+9=99, not 18)
        if( order.itemExists(item) )
        { // If the item exists in the order already, get its quantity
            quantity = order.getItem(item).getQuantity();
        } else { // Else, set quantity to 0
            quantity = 0;
        }
        String newQuantity = Integer.toString(quantity) + Integer.toString(num);
        quantity = Integer.parseInt(newQuantity);
        
        // If the selected item is already in the order, remove it first
        if( order.itemExists(item) )
        {
            order.removeItem(item);
        }
        
        // Add the new quantity to the order
        order.addItem(item, quantity);
        order.populateList();
        refreshOrderDisplay();
        //System.out.println(order.getProducts()); // DEBUG, DELETE
        /* // MORE DEBUG CODE
        System.out.println("ID: " + order.getId());
        */
        
    }
    
    private void refreshOrderDisplay()
    {
        txtOrderDisplay.setText(null);
        for(String i : order.getText())
        {
            txtOrderDisplay.append(i);
        }
    }
    
    private String getUsernameFromDropbox(String input)
    { // Parse the "[ID] USERNAME" dropboxes in the Reports and Users tabs
        // Cut it off at the space (after the closing square bracket)
        String username = input.substring( input.indexOf(" ")+1 );
        return username;
    }
    
    private void populateReports(Staff staff)
    {
        try
        {
            DecimalFormat formatter = new DecimalFormat("Â£0.00"); // truncate, add pound sign, and trailing zeroes.
            String username = staff.getUsername().toUpperCase();
            int totalServed = staff.getTotalCustServed( username );
            double totalSalesTakings = staff.getTotalSalesTakings( username );
            double avgSaleCost = staff.getAvgSaleCost( username );
            double minSaleCost = staff.getMinSaleCost( username );
            double maxSaleCost = staff.getMaxSaleCost( username );

            lblReportFor.setText("Viewing report for: " + username.toLowerCase());
            lblTotalCustServed.setText("Total customers served: " + totalServed);
            lblTotalSalesTakings.setText("Total sales takings: " + formatter.format(totalSalesTakings));
            lblAvgSaleCost.setText("Average sale cost: " + formatter.format(avgSaleCost));
            lblMinSaleCost.setText("Minimum sale cost: " + formatter.format(minSaleCost));
            lblMaxSaleCost.setText("Maximum sale cost: " + formatter.format(maxSaleCost));
        } catch (SQLException ex) {
            Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void setHiddenItems()
    { // Show or hide items depending on the user's role
        switch(user.getRole())
        {
            case SALES:
                mnuReboot.setEnabled(false);
                pnlUserManagement.setVisible(false);
                cbbSelectUserForReport.setVisible(false);
                break;
            case MANAGER:
                mnuReboot.setEnabled(true);
                pnlUserManagement.setVisible(true);
                cbbSelectUserForReport.setVisible(true);
                break;
            case TECH:
                mnuReboot.setEnabled(true);
                pnlUserManagement.setVisible(true);
                cbbSelectUserForReport.setVisible(true);
                break;
            default:
                break;
        }
    }
    // END OF CUSTOM METHODS
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // PLACEHOLDER
        // This ensures that we still know who is logged in, and their role.
        //String username = login.username;
        //ROLE role = login.role;
        //lblPlaceholder.setText(lblPlaceholder.getText() + username + "("+role+")");
        // Begin a new order
        startNewOrder();
        // Handle the UI elements that should be hidden for this user (if any).
        setHiddenItems();
    }//GEN-LAST:event_formWindowOpened

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        numButtonPressed(1);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        numButtonPressed(2);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        numButtonPressed(3);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        numButtonPressed(4);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        numButtonPressed(5);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        numButtonPressed(6);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        numButtonPressed(7);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        numButtonPressed(8);
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        numButtonPressed(9);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        numButtonPressed(0);
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        // This is actually redundant... Remove this.
        System.out.println("OK button pressed.");
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        //Product item = order.getLastItem(); // My old way of doing it. DELETE!
        String itemName = cbbSelectProduct.getSelectedItem().toString();
        itemName = itemName.toUpperCase();
        try
        { // We're going to check if the selected item is in the order...
            Product item = Inventory.getByName(itemName);
            if( order.itemExists(item) )
            { // Selected item is in the order, remove it.
                order.removeItem(item);
                refreshOrderDisplay();
            }
            else
            { // Selected item is not in the order, do nothing.
                System.out.println("Item \"" + itemName + "\" is not in order, doing nothing...");
            }
        } catch (SQLException ex)
        {
            Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        startNewOrder();
        refreshOrderDisplay();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCreateAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAcctActionPerformed
        // Create a new staff member
        Staff newStaff = new Staff(-1, "blank", "changeme", ROLE.SALES);
        try
        {
            newStaff.setNewId(); // Set a new id for this staff member automatically
            account acct = new account( MODE.CREATE, newStaff );
            acct.setVisible(true); // Open account form in CREATE mode
        } catch (SQLException ex) { Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex); }
    }//GEN-LAST:event_btnCreateAcctActionPerformed

    private void btnEditAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditAcctActionPerformed
        //Staff staff = new Staff(-1,"PLACEHOLDER","PLACEHOLDER",ROLE.SALES); // DEBUG. Should actually be the one from the dropbox.
        String username = "";
        username = getUsernameFromDropbox( cbbSelectAcct.getSelectedItem().toString() );
        try
        {
            Staff staff = Staff.getByUsername(username);
            account acct = new account( MODE.EDIT, staff );
            acct.setVisible(true);  // Open account form in EDIT mode
        } catch (SQLException ex) { Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex); }
    }//GEN-LAST:event_btnEditAcctActionPerformed

    private void btnDelAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelAcctActionPerformed
        int confirmDialogResult = 0;
        String username = getUsernameFromDropbox( cbbSelectAcct.getSelectedItem().toString() );
        Staff staff = null;
        
        confirmDialogResult = JOptionPane.showConfirmDialog( this,
                        "Are you sure you wish to delete the user \""+username+"\"?",
                        "Confirmation needed!",
                        JOptionPane.YES_NO_OPTION
                        );
        
        if(confirmDialogResult == JOptionPane.YES_OPTION)
        {
            // Clear the select account dropbox
            cbbSelectAcct.removeAllItems();
            try
            {
                staff = Staff.getByUsername(username);
                staff.delete();
                
                // Now fill the dropbox back up with all the staff
                for(Staff s : Staff.getAllStaff())
                { // Format: [ID] USERNAME
                    cbbSelectAcct.addItem("["+s.getId()+"] "+s.getUsername());
                }
            }
            catch (SQLException ex)
            {
                Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            // Do nothing
        }
    }//GEN-LAST:event_btnDelAcctActionPerformed

    private void mnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAboutActionPerformed
        // TODO add your handling code here:
        about abt = new about();
        abt.setVisible(true);
    }//GEN-LAST:event_mnuAboutActionPerformed

    private void pnlReportsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlReportsFocusGained
                
    }//GEN-LAST:event_pnlReportsFocusGained

    private void tbpTabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbpTabsStateChanged
        // Update information

        if(tbpTabs.getSelectedIndex() == TABS.TAB_SALES.ordinal())
        { // SALES
            // Clear the select product dropbox
            cbbSelectProduct.removeAllItems();
            try
            {
                // Now fill it with the inventory
                for(Product p : Inventory.getAllProducts())
                {
                    cbbSelectProduct.addItem(p.getName());
                }
            } catch (SQLException ex) { Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex); }
        }
        else if(tbpTabs.getSelectedIndex() == TABS.TAB_PRODUCTS.ordinal())
        { // PRODUCTS
            // Nothing yet
        }
        else if(tbpTabs.getSelectedIndex() == TABS.TAB_REPORTS.ordinal())
        { // REPORTS
            populateReports(user); // View reports for logged in user by default
            
            // Clear the select user for report dropbox
            cbbSelectUserForReport.removeAllItems();
            try
            {   // Now fill it with all the staff
                for(Staff s : Staff.getAllStaff())
                { // Format: [ID] USERNAME
                    cbbSelectUserForReport.addItem("["+s.getId()+"] "+s.getUsername());
                }
            } catch (SQLException ex) { Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex); }
            
            // Now to make sure the logged in user's reports are shown by default
            // (fixes the "sales staff see first user's reports instead of their own" bug)
            for(int i=0; i <= cbbSelectUserForReport.getItemCount()-1; i++)
            { // Iterate through cbbSelectUserForReport items
                if( cbbSelectUserForReport.getItemAt(i).contains(user.getUsername()) )
                { // If the current item contains this user's username...
                    populateReports(user); // View reports for this user.
                }
            }
        }
        else if(tbpTabs.getSelectedIndex() == TABS.TAB_USERS.ordinal())
        { // USERS
            lblLoggedInAs.setText("Logged in as: " + user.getUsername());
            lblAcctRole.setText("Account role: " + user.getRole());
            lblStaffId.setText("Staff ID: " + user.getId());
            
            // Clear the select account dropbox
            cbbSelectAcct.removeAllItems();
            try
            {   // Now fill it with all the staff
                for(Staff s : Staff.getAllStaff())
                { // Format: [ID] USERNAME
                    cbbSelectAcct.addItem("["+s.getId()+"] "+s.getUsername());
                }
            } catch (SQLException ex) { Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex); }
        }

    }//GEN-LAST:event_tbpTabsStateChanged

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // Takes us back to the main login window
        // TODO: Process must be killed if second login window is closed, fix this!    
        
        int dialogOption = JOptionPane.showConfirmDialog(this,
                "Are you sure you wish to log out?",
                "Confirmation required!",
                JOptionPane.YES_NO_OPTION
        );
        
        if( dialogOption == JOptionPane.YES_OPTION )
        {
            login loginWindow = new login(null, false);
            loginWindow.setVisible(true);
            user = null; // This essentially "logs out" the logged-in user.
            System.out.println("User logged out... ");
            //this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void mnuSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSystemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuSystemActionPerformed

    private void mnuRebootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRebootActionPerformed
        int dialogOption = JOptionPane.showConfirmDialog(this,
                "Are you sure you wish to reboot the system? This will clear the database.\n"
                + "To log in again, you will need to either: \n"
                + "A) Create an entry manually in the staff table, or\n"
                + "B) Enter \"refilldb\" as your username and click login to fill the db with some test entries.\n"
                + "Click yes to proceed, or no if you are afraid.",
                "Confirmation required!",
                JOptionPane.YES_NO_OPTION
        );
        if(dialogOption == JOptionPane.YES_OPTION)
        {
            try
            {
                Database.clearDatabase();
            } catch (SQLException ex) {
                Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.exit(0);
        }
    }//GEN-LAST:event_mnuRebootActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed

        try
        {
            order.save();

            // Print info about saved order to prove that it has saved
            Order o = Order.getLastOrder();
            System.out.println("\nOrder saved to database: ");
            System.out.println("ORDER ID: " + o.getId()
                    + "\nDATE: " +o.getDate()
            );
            for( Map.Entry<Product, Integer> i : o.getProducts().entrySet() )
            {
                System.out.println("ITEM: " + i.getKey().getName()
                        + "\tQUANTITY: " + i.getValue()
                );
            }
            System.out.println(""); // Just a little newline
        } catch (SQLException ex) {
            Logger.getLogger(ui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog( this,
                        "The order (ID: "+order.getId()+") has been saved!",
                        "Order checked out!",
                        JOptionPane.INFORMATION_MESSAGE
                        );
        startNewOrder();
        refreshOrderDisplay();
        // Add +1 to total customers served
        //totalCustServed++;
        //System.out.println("TO BE IMPLEMENTED. CUSTOMERS SERVED = " + totalCustServed);
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void cbbSelectUserForReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSelectUserForReportActionPerformed
        Staff staff = null;
        if( cbbSelectUserForReport.getSelectedItem() != null)
        {
            String username = getUsernameFromDropbox( cbbSelectUserForReport.getSelectedItem().toString() );
            try { staff = Staff.getByUsername(username); populateReports(staff); }
            catch (SQLException ex) { Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex); }
        }
    }//GEN-LAST:event_cbbSelectUserForReportActionPerformed

    private void btnFreq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFreq1ActionPerformed

    }//GEN-LAST:event_btnFreq1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnCreateAcct;
    private javax.swing.JButton btnDelAcct;
    private javax.swing.JButton btnEditAcct;
    private javax.swing.JButton btnFreq1;
    private javax.swing.JButton btnFreq2;
    private javax.swing.JButton btnFreq3;
    private javax.swing.JButton btnFreq4;
    private javax.swing.JButton btnFreq5;
    private javax.swing.JButton btnFreq6;
    private javax.swing.JButton btnFreq7;
    private javax.swing.JButton btnFreq8;
    private javax.swing.JButton btnFreq9;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<String> cbbSelectAcct;
    private javax.swing.JComboBox<String> cbbSelectProduct;
    private javax.swing.JComboBox<String> cbbSelectUserForReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAcctRole;
    private javax.swing.JLabel lblAvgSaleCost;
    private javax.swing.JLabel lblFrequentlyBought;
    private javax.swing.JLabel lblLoggedInAs;
    private javax.swing.JLabel lblMaxSaleCost;
    private javax.swing.JLabel lblMinSaleCost;
    private javax.swing.JLabel lblReportFor;
    private javax.swing.JLabel lblSalesTotal;
    private javax.swing.JLabel lblStaffId;
    private javax.swing.JLabel lblTotalCustServed;
    private javax.swing.JLabel lblTotalSalesTakings;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuAbout;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuReboot;
    private javax.swing.JMenu mnuSystem;
    private javax.swing.JPanel pnlBeta;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JPanel pnlFrequentlyBought;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlKeypad;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JPanel pnlReportFor;
    private javax.swing.JPanel pnlReportInfo;
    private javax.swing.JPanel pnlReports;
    private javax.swing.JPanel pnlSalesTotal;
    private javax.swing.JPanel pnlSelectProduct;
    private javax.swing.JPanel pnlShopping;
    private javax.swing.JPanel pnlUserManagement;
    private javax.swing.JPanel pnlUsers;
    private javax.swing.JScrollPane scpSalesTotal;
    private javax.swing.JTabbedPane tbpTabs;
    private javax.swing.JTextArea txtOrderDisplay;
    // End of variables declaration//GEN-END:variables
}
